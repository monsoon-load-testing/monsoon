Features
- monsoon init: A command to spin up a monsoon main directory
(create a test script template for the user to write their codes, package.json, default config.json may be saved in another sub-directory)
    - have global monsoon npm package
    - `monsoon init`
        - make a directory `monsoon`
        - a default test_script.js inside
        - a package.json including puppeteer, weather-station
          - `npm install`
        - a default test_config.json (concurrentUsers, testDuration) - a single source of truth for parameters
        - cdk: include aws infrastructure inside the CLI -> deploy directly DONE
        - current solution for aws credentals: create global .monsoon -> store credentials in .env file DONE
        - make a generator possible solutions:
          - write by hand (fs module, etc...)
          - make a repo: run `git clone -q` from the user's system and remove `rm -rf .git`
- monsoon configure: Ask questions for AWS credentials DONE
- monsoon deploy: A command to deploy the infrastructure DONE
    - wrap around `cdk synth`, `cdk bootstrap`, `cdk deploy`. 
    Our package needs to include the source codes (aws folder)
    - `cdk synth`, `cdk bootstrap`, `cdk deploy` are only allowed after `cdk init`
- monsoon start mypoortest.js: A command to start the test (rename the test script according to our infrastructure and upload to S3)
    - will not be allowed until the user builds the infrastructure
    - monsoon start (sdk-level):
      - scan the S3 buckets and find(regex) the monsoon S3
      - change the testscript name to test_script.js upload test_script to S3
      - after the upload -> scan the lambdas and find the startingLambda
      - start the lambda
- monsoon update: update the parameters if they want to change it (optional - strech goal)
- monsoon destroy: A command to tear-down infrastructure DONE
    - will be the same logic as deploy
- monsoon weather-channel -on: A command to spin up the dashboard
    - wait for the dashboard -> a local express app -> a shell to run `npm start`
- monsoon weather-channel -off: A command to stop the dashboard

- npm i -g monsoon-load-testing (or similar): Npm package

`monsoon init` folder structure
monsoon-load-testing (main directory)

node_modules
package.json (monsoon-weather-station, puppeteer)
mytest
  |- test_script.js
  |- test_config.json
mytest2
  |- test_script.js
  |- test_config.json

`monsoon list` -> list all the names of the directories they can run the test
`monsoon new-test` -> to create a new test directory
dirNames = [""] // some random names for monsoon new-test