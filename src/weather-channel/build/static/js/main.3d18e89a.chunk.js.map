{"version":3,"sources":["components/ListTest.js","lib/ApiClient.js","components/ListTestTable.js","components/Legend.js","components/MainChart.js","components/WindowChart.js","components/ChartContainer.js","components/StatisticRow.js","components/Statistics.js","components/StepButton.js","components/TestPage.js","components/Header.js","App.js","index.js"],"names":["ListTest","props","date","Date","Number","testDate","dateString","toDateString","dateTime","getHours","getMinutes","getSeconds","url","clickHandler","data-url","onClick","className","testName","axios","require","logError","errorResponse","response","data","error","console","BASE_URL","unwrapData","defaults","headers","common","apiClient","getListOfSteps","tableName","callback","get","then","catch","getTestDataset","getTestStats","getListOfTables","ListTestTable","useState","tables","setTables","useEffect","tablePromise","Promise","resolve","navigate","useNavigate","e","preventDefault","target","closest","dataset","scope","JSON","stringify","map","table","keyName","Legend","active","setActive","activeHandler","metric","isActiveResponseTime","isActiveConcurrentUsers","isActiveTransactionRate","isActivePassRatio","data-metric","MainChart","responseTime","maxResponseTime","concurrentUsers","maxConcurrentUsers","transactionRate","maxTransactionRate","passRatio","maxPassRatio","zoomDomain","setZoomDomain","VictoryZoomVoronoiContainer","createContainer","theme","VictoryTheme","material","domainPadding","padding","left","right","top","bottom","width","height","scale","x","domain","y","containerComponent","allowZoom","allowPan","voronoiBlacklist","voronoiDimension","zoomDimension","onZoomDomainChange","labels","datum","value","unit","labelComponent","dependentAxis","tickValues","tickFormat","tickValue","Math","round","axisLabelComponent","angle","label","style","grid","strokeWidth","ticks","offsetX","name","stroke","fill","size","WindowChart","brushDimension","brushDomain","onBrushDomainChange","ChartContainer","max","time","length","startTime","endTime","StatisticRow","metricName","metricValue","metricUnit","Statistics","p95","average","min","rel","href","StepButton","stepName","TestPage","useParams","allSteps","setAllSteps","allStats","setAllStats","allData","setAllData","currentStep","setCurrentStep","currentStats","setCurrentStats","currentData","setCurrentData","stepsPromise","statsPromise","datasetPromise","all","rawData","Object","values","forEach","step","offset","getTimezoneOffset","formatData","step1","textContent","data-key","Header","src","alt","App","path","index","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d18e89a.chunk.js","sourcesContent":["const ListTest = (props) => {\n  const date = new Date(Number(props.testDate, 10));\n  const dateString = date.toDateString();\n  const dateTime = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\n  const url = props.url\n\n  const clickHandler = props.clickHandler\n  return (\n    <tr data-url={url} onClick={clickHandler}>\n      <td className=\"px-6 py-4 whitespace-nowrap\">\n        <div className=\"flex items-center\">\n          <div className=\"ml-4\">\n            <div className=\"text-sm font-medium text-gray-900\">\n              {props.testName}\n            </div>\n          </div>\n        </div>\n      </td>\n      <td className=\"px-6 py-4 whitespace-nowrap\">\n        <div className=\"text-sm text-gray-900\">{dateString}: {dateTime}</div>\n      </td>\n    </tr>\n  );\n};\n\nexport default ListTest;\n","// import axios from \"axios\";\n\nconst axios = require(\"axios\");\n\nfunction logError(errorResponse) {\n  const response = errorResponse.response;\n\n  if (response && response.data && response.data.error) {\n    console.error(`HTTP Error: ${response.data.error}`);\n  } else {\n    console.error(\"Error: \", errorResponse);\n  }\n}\nconst BASE_URL = \"/api/tests\";\n\nfunction unwrapData(response) {\n  return response.data;\n}\n// d\naxios.defaults.headers.common[\"X-Requested-With\"] = \"XMLHttpRequest\";\naxios.defaults.headers.common[\"Accept\"] = \"application/json\";\n\nconst apiClient = {\n  getListOfSteps(tableName, callback) {\n    return axios\n      .get(`${BASE_URL}/${tableName}/steps`)\n      .then(unwrapData)\n      .then(callback)\n      .catch(logError);\n  },\n\n  getTestDataset(tableName, callback) {\n    return axios\n      .get(`${BASE_URL}/${tableName}`)\n      .then(unwrapData)\n      .then(callback)\n      .catch(logError);\n  },\n\n  getTestStats(tableName, callback) {\n    return axios\n      .get(`${BASE_URL}/${tableName}/stats`)\n      .then(unwrapData)\n      .then(callback)\n      .catch(logError);\n  },\n  \n  getListOfTables(tableName, callback) {\n    return axios\n      .get(`${BASE_URL}`)\n      .then(unwrapData)\n      .then(callback)\n      .catch(logError);\n  },\n  \n};\n\n// (async () => {\n//   const steps = await apiClient.getListOfSteps(\"downpour-test-1637014373298\");\n//   console.log(\"Steps\", steps);\n//   const dataset = await apiClient.getTestDataset(\"downpour-test-1637014373298\");\n//   console.log(\"Dataset\", dataset);\n//   const testStats = await apiClient.getTestStats(\"downpour-test-1637014373298\");\n//   console.log(\"Stats\", testStats);\n// })();\n\nexport default apiClient;\n","import ListTest from \"./ListTest\";\nimport apiClient from \"../lib/ApiClient\";\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router\";\n\nconst ListTestTable = () => {\n  const [tables, setTables] = useState([]);\n  \n  useEffect(() => {\n    const tablePromise = apiClient.getListOfTables();\n    Promise.resolve(tablePromise)\n    .then(data => {\n      const temp = data;\n      return temp\n    })\n    .then(data => {\n      setTables(data)\n    });\n  }, [setTables])\n\n  const navigate = useNavigate();\n  const clickHandler = (e) => {\n    e.preventDefault();\n    navigate(`/tests/${e.target.closest('tr').dataset.url}/`)\n  }\n\n  return (\n    <div className=\"flex flex-col\">\n      <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n        <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n          <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th\n                    scope=\"col\"\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                  >\n                    Test Name\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                  >\n                    Date\n                  </th>\n                  <th scope=\"col\" className=\"relative px-6 py-3\">\n                    <span className=\"sr-only\">Delete</span>\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {JSON.stringify(tables) !== [] && (\n                  tables.map(table => {\n\n                    let keyName = `${table.testName}-${table.date}`\n                    return (\n                      <ListTest key={keyName} url={keyName} testName={table.testName} testDate={table.date} clickHandler={clickHandler} />\n                    )\n                  })\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ListTestTable;\n","const Legend = ({ active, setActive }) => {\n  const activeHandler = (e) => {\n    e.preventDefault();\n    const metric = e.target.dataset.metric;\n    setActive({ ...active, [metric]: !active[metric] });\n  };\n\n  const {\n    isActiveResponseTime,\n    isActiveConcurrentUsers,\n    isActiveTransactionRate,\n    isActivePassRatio,\n  } = active;\n  return (\n    <div className=\"border bg-gray-500 mt-2\">\n      <p className=\"text-center\">Legend</p>\n      <ul className=\"flex justify-evenly\">\n        <li\n          onClick={activeHandler}\n          className=\"text-left cursor-pointer inline-block\"\n          data-metric=\"isActiveResponseTime\"\n        >\n          Response Time: {isActiveResponseTime ? \"active\" : \"inactive\"}\n        </li>\n        <li\n          onClick={activeHandler}\n          className=\"text-left cursor-pointer inline-block\"\n          data-metric=\"isActiveConcurrentUsers\"\n        >\n          Concurrent Users: {isActiveConcurrentUsers ? \"active\" : \"inactive\"}\n        </li>\n        <li\n          onClick={activeHandler}\n          className=\"text-left cursor-pointer inline-block\"\n          data-metric=\"isActiveTransactionRate\"\n        >\n          Transaction Rate: {isActiveTransactionRate ? \"active\" : \"inactive\"}\n        </li>\n        <li\n          onClick={activeHandler}\n          className=\"text-left cursor-pointer inline-block\"\n          data-metric=\"isActivePassRatio\"\n        >\n          Pass Ratio: {isActivePassRatio ? \"active\" : \"inactive\"}\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Legend;\n","import {\n  // VictoryBar,\n  VictoryChart,\n  VictoryAxis,\n  VictoryTheme,\n  VictoryLine,\n  VictoryBrushContainer,\n  VictoryZoomContainer,\n  createContainer,\n  VictoryTooltip,\n  VictoryLegend,\n  VictoryLabel,\n  VictoryScatter,\n  VictoryGroup,\n} from \"victory\";\n\n// import Axes from './Axes'\n\nconst MainChart = ({\n  responseTime,\n  maxResponseTime,\n  concurrentUsers,\n  maxConcurrentUsers,\n  transactionRate,\n  maxTransactionRate,\n  passRatio,\n  maxPassRatio,\n  zoomDomain,\n  setZoomDomain,\n  active,\n}) => {\n  const {\n    isActiveResponseTime,\n    isActiveConcurrentUsers,\n    isActiveTransactionRate,\n    isActivePassRatio,\n  } = active;\n  const VictoryZoomVoronoiContainer = createContainer(\"zoom\", \"voronoi\");\n  return (\n    <>\n      <VictoryChart\n        key=\"Main VictoryChart\"\n        theme={VictoryTheme.material}\n        domainPadding={20}\n        padding={{ left: 100, right: 100, top: 50, bottom: 30 }}\n        width={1000}\n        height={350}\n        scale={{ x: \"time\" }}\n        domain={{ y: [0, 1.1] }}\n        containerComponent={\n          <VictoryZoomVoronoiContainer\n            allowZoom={false}\n            allowPan={false}\n            voronoiBlacklist={[\"ignore1\", \"ignore2\", \"ignore3\", \"ignore4\"]}\n            voronoiDimension=\"x\"\n            zoomDimension=\"x\"\n            zoomDomain={zoomDomain}\n            onZoomDomainChange={(domain) => setZoomDomain(domain)}\n            labels={({ datum }) =>\n              `${datum.metric}: ${datum.value} ${datum.unit}`\n            }\n            labelComponent={<VictoryTooltip />}\n          />\n        }\n      >\n        <VictoryAxis key=\"Response Time Axis\" />\n        {isActiveResponseTime && (\n          <VictoryAxis\n            dependentAxis\n            tickValues={[0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1]}\n            tickFormat={(tickValue) => Math.round(tickValue * maxResponseTime)}\n            axisLabelComponent={<VictoryLabel x={50} y={150} angle={-90} />}\n            label={\"Response Time\"}\n            style={{\n              grid: { strokeWidth: 0 },\n              ticks: { padding: -5, strokeWidth: 0 },\n            }}\n          />\n        )}\n\n        {isActiveConcurrentUsers && (\n          <VictoryAxis\n            key=\"Concurrent Users Axis\"\n            dependentAxis\n            tickValues={[0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1]}\n            tickFormat={(tickValue) =>\n              Math.round(tickValue * maxConcurrentUsers)\n            }\n            axisLabelComponent={<VictoryLabel x={150} y={150} angle={-90} />}\n            label={\"Concurrent users\"}\n            style={{\n              ticks: { padding: -35, strokeWidth: 0 },\n              grid: { strokeWidth: 0 },\n            }}\n            // orientation={\"right\"}\n          />\n        )}\n        {isActiveTransactionRate && (\n          <VictoryAxis\n            key=\"Transaction Rate Axis\"\n            dependentAxis\n            tickValues={[0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1]}\n            tickFormat={(tickValue) =>\n              Math.round(tickValue * maxTransactionRate)\n            }\n            offsetX={900}\n            axisLabelComponent={\n              <VictoryLabel x={900 - 50} y={150} angle={-90} />\n            }\n            label={\"Transaction rate\"}\n            style={{\n              grid: { strokeWidth: 0 },\n              ticks: { padding: 0, strokeWidth: 0 },\n            }}\n          />\n        )}\n        {isActivePassRatio && (\n          <VictoryAxis\n            key=\"Pass Ratio Axis\"\n            dependentAxis\n            tickValues={[0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1]}\n            tickFormat={(tickValue) => Math.round(tickValue * maxPassRatio)}\n            offsetX={900}\n            axisLabelComponent={\n              <VictoryLabel x={900 + 50} y={150} angle={-90} />\n            }\n            label={\"Pass ratio\"}\n            style={{\n              grid: { strokeWidth: 0 },\n              ticks: { padding: -50, strokeWidth: 0 },\n            }}\n          />\n        )}\n\n        {isActiveResponseTime && (\n          <VictoryLine\n            key=\"Response Time Line\"\n            name=\"ignore1\"\n            style={{ data: { stroke: \"tomato\" } }}\n            data={responseTime}\n            x={\"time\"}\n            y={(datum) => datum.value / maxResponseTime}\n          />\n        )}\n\n        {isActiveResponseTime && (\n          <VictoryScatter\n            key=\"Response Time Scatter\"\n            style={{ data: { fill: \"tomato\" } }}\n            data={responseTime}\n            x={\"time\"}\n            y={(datum) => datum.value / maxResponseTime}\n            size={({ active }) => (active ? 4 : 1)}\n          />\n        )}\n\n        {isActiveConcurrentUsers && (\n          <VictoryLine\n            key=\"Concurrent Users Line\"\n            name=\"ignore2\"\n            style={{ data: { stroke: \"blue\" } }}\n            data={concurrentUsers}\n            x={\"time\"}\n            y={(datum) => datum.value / maxConcurrentUsers}\n          />\n        )}\n\n        {isActiveConcurrentUsers && (\n          <VictoryScatter\n            key=\"Concurrent Users Scatter\"\n            style={{ data: { fill: \"blue\" } }}\n            data={concurrentUsers}\n            x={\"time\"}\n            y={(datum) => datum.value / maxConcurrentUsers}\n            size={({ active }) => (active ? 4 : 1)}\n          />\n        )}\n\n        {isActiveTransactionRate && (\n          <VictoryLine\n            key=\"Transaction Rate Line\"\n            name=\"ignore3\"\n            style={{ data: { stroke: \"purple\" } }}\n            data={transactionRate}\n            x={\"time\"}\n            y={(datum) => datum.value / maxTransactionRate}\n          />\n        )}\n\n        {isActiveTransactionRate && (\n          <VictoryScatter\n            key=\"Transaction Rate Scatter\"\n            style={{ data: { fill: \"purple\" } }}\n            data={transactionRate}\n            x={\"time\"}\n            y={(datum) => datum.value / maxTransactionRate}\n            size={({ active }) => (active ? 4 : 1)}\n          />\n        )}\n\n        {isActivePassRatio && (\n          <VictoryLine\n            key=\"Pass Ratio Line\"\n            name=\"ignore4\"\n            style={{ data: { stroke: \"green\" } }}\n            data={passRatio}\n            x={\"time\"}\n            y={(datum) => datum.value / maxPassRatio}\n          />\n        )}\n\n        {isActivePassRatio && (\n          <VictoryScatter\n            key=\"Pass Ratio Scatter\"\n            style={{ data: { fill: \"green\" } }}\n            data={passRatio}\n            x={\"time\"}\n            y={(datum) => datum.value / maxPassRatio}\n            size={({ active }) => (active ? 4 : 1)}\n          />\n        )}\n      </VictoryChart>\n    </>\n  );\n};\n\nexport default MainChart;\n","import {\n  // VictoryBar,\n  VictoryChart,\n  VictoryAxis,\n  VictoryTheme,\n  VictoryLine,\n  VictoryBrushContainer,\n  VictoryZoomContainer,\n  createContainer,\n  VictoryTooltip,\n  VictoryLegend,\n  VictoryLabel,\n  VictoryScatter,\n} from \"victory\";\n\nconst WindowChart = ({\n  responseTime,\n  maxResponseTime,\n  concurrentUsers,\n  maxConcurrentUsers,\n  transactionRate,\n  maxTransactionRate,\n  passRatio,\n  maxPassRatio,\n  zoomDomain,\n  setZoomDomain,\n  active,\n}) => {\n  const {\n    isActiveResponseTime,\n    isActiveConcurrentUsers,\n    isActiveTransactionRate,\n    isActivePassRatio,\n  } = active;\n  return (\n    <>\n      <VictoryChart\n        key=\"Window VictoryChart\"\n        theme={VictoryTheme.material}\n        domainPadding={20}\n        padding={{ left: 100, right: 100, top: 10, bottom: 50 }}\n        width={1000}\n        height={110}\n        scale={{ x: \"time\" }}\n        domain={{ y: [0, 1.1] }}\n        containerComponent={\n          <VictoryBrushContainer\n            brushDimension=\"x\"\n            brushDomain={zoomDomain}\n            onBrushDomainChange={(domain) =>\n              setZoomDomain({ x: domain.x, y: [0, 1.1] })\n            }\n          />\n        }\n      >\n        <VictoryAxis key=\"Window time axis\" />\n\n        {isActiveResponseTime && (\n          <VictoryLine\n            key=\"Window Response Time line\"\n            name=\"Response Time\"\n            style={{ data: { stroke: \"tomato\" } }}\n            data={responseTime}\n            x={\"time\"}\n            y={(datum) => datum.value / maxResponseTime}\n          />\n        )}\n\n        {isActiveConcurrentUsers && (\n          <VictoryLine\n            key=\"Window Concurrent Users Line\"\n            style={{ data: { stroke: \"blue\" } }}\n            data={concurrentUsers}\n            x={\"time\"}\n            y={(datum) => datum.value / maxConcurrentUsers}\n          />\n        )}\n\n        {isActiveTransactionRate && (\n          <VictoryLine\n            key=\"Window Transaction Rate Line\"\n            style={{ data: { stroke: \"purple\" } }}\n            data={transactionRate}\n            x={\"time\"}\n            y={(datum) => datum.value / maxTransactionRate}\n          />\n        )}\n\n        {isActivePassRatio && (\n          <VictoryLine\n            key=\"Window Pass Ratio Line\"\n            style={{ data: { stroke: \"green\" } }}\n            data={passRatio}\n            x={\"time\"}\n            y={(datum) => datum.value / maxPassRatio}\n          />\n        )}\n      </VictoryChart>\n    </>\n  );\n};\n\nexport default WindowChart;\n","import {\n  // VictoryBar,\n  VictoryChart,\n  VictoryAxis,\n  VictoryTheme,\n  VictoryLine,\n  VictoryBrushContainer,\n  VictoryZoomContainer,\n  createContainer,\n  VictoryTooltip,\n  VictoryLegend,\n  VictoryLabel,\n  VictoryScatter,\n} from \"victory\";\nimport Legend from \"./Legend\";\nimport MainChart from \"./MainChart\";\nimport WindowChart from \"./WindowChart\";\nimport { useState } from \"react\";\n\n// {responseTime, concurrentUsers, transactionRate, passRatio }\nconst ChartContainer = ({\n  responseTime,\n  concurrentUsers,\n  transactionRate,\n  passRatio,\n}) => {\n  const [\n    maxResponseTime,\n    maxConcurrentUsers,\n    maxTransactionRate,\n    maxPassRatio,\n  ] = [responseTime, concurrentUsers, transactionRate, passRatio].map(\n    (dataset) => {\n      return Math.max(...dataset.map((datum) => datum.value));\n    }\n  );\n\n  const [startTime, endTime] = [\n    responseTime[0].time,\n    responseTime[responseTime.length - 1].time,\n  ];\n  const [zoomDomain, setZoomDomain] = useState({\n    x: [startTime, endTime],\n    y: [0, 1.1],\n  });\n\n  const [active, setActive] = useState({\n    isActiveResponseTime: true,\n    isActiveConcurrentUsers: true,\n    isActiveTransactionRate: true,\n    isActivePassRatio: true,\n  });\n\n  return (\n    <div className=\"w-full rounded-lg flex-shrink-0 flex-grow bg-gray-0 border-4 mt-2\">\n      <div className=\"flex justify-center\">\n        <div className=\"w-4/5 flex flex-col\">\n          <Legend active={active} setActive={setActive} />\n          <MainChart\n            responseTime={responseTime}\n            maxResponseTime={maxResponseTime}\n            concurrentUsers={concurrentUsers}\n            maxConcurrentUsers={maxConcurrentUsers}\n            transactionRate={transactionRate}\n            maxTransactionRate={maxTransactionRate}\n            passRatio={passRatio}\n            maxPassRatio={maxPassRatio}\n            zoomDomain={zoomDomain}\n            setZoomDomain={setZoomDomain}\n            active={active}\n          />\n          <WindowChart\n            responseTime={responseTime}\n            maxResponseTime={maxResponseTime}\n            concurrentUsers={concurrentUsers}\n            maxConcurrentUsers={maxConcurrentUsers}\n            transactionRate={transactionRate}\n            maxTransactionRate={maxTransactionRate}\n            passRatio={passRatio}\n            maxPassRatio={maxPassRatio}\n            zoomDomain={zoomDomain}\n            setZoomDomain={setZoomDomain}\n            active={active}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChartContainer;\n","const StatisticRow = (props) => {\n  return (\n    <div className=\"flex flex-grow items-center justify-center mt-0 pt-0 pb-0 border-t-0 px-6 align-middle border-l-0 text-lg border-r-0 whitespace-nowrap p-4 text-left text-blueGray-700 \">\n      {props.metricName}: {props.metricValue} {props.metricUnit}\n    </div>\n  );\n};\n\nexport default StatisticRow;\n","import StatisticRow from \"./StatisticRow\";\n\nconst Statistics = ({ responseTime }) => {\n  const p95 = Math.round(responseTime[\"95th Percentile\"]);\n  const average = Math.round(responseTime[\"Average\"]);\n  const min = Math.round(responseTime[\"Min\"]);\n  const max = Math.round(responseTime[\"Max\"]);\n  \n  return (\n    <div className=\"w-full rounded-lg flex-shrink-0 flex-grow mb-0\">\n      <link\n        rel=\"stylesheet\"\n        href=\"https://demos.creative-tim.com/notus-js/assets/styles/tailwind.css\"\n      />\n      <link\n        rel=\"stylesheet\"\n        href=\"https://demos.creative-tim.com/notus-js/assets/vendor/@fortawesome/fontawesome-free/css/all.min.css\"\n      />\n\n      <section>\n        <div>\n          <div className=\"relative flex flex-col min-w-0 break-words bg-white w-full shadow-lg rounded \">\n            <div className=\"block w-full overflow-x-auto\">\n              <div className=\"items-center bg-transparent w-full border-collapse\">\n                <div className=\"\">\n                  <div>\n                    <p className=\"px-6 bg-blueGray-50 text-blueGray-500 align-middle border border-solid border-blueGray-100 text-s uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-center\">\n                      Response Time Metrics\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"flex justify-evenly\">\n                  <StatisticRow\n                    metricName=\"95th Percentile\"\n                    metricValue={p95}\n                    metricUnit=\"ms\"\n                  />\n                  <StatisticRow\n                    metricName=\"Average\"\n                    metricValue={average}\n                    metricUnit=\"ms\"\n                  />\n                  <StatisticRow\n                    metricName=\"Min\"\n                    metricValue={min}\n                    metricUnit=\"ms\"\n                  />\n                  <StatisticRow\n                    metricName=\"Max\"\n                    metricValue={max}\n                    metricUnit=\"ms\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Statistics;","const StepButton = ({ stepName, clickHandler }) => {\n  return (\n    <div\n      className=\"h-10 w-15 flex flex-grow items-center justify-center bg-red-200 rounded-lg cursor-pointer hover:text-gray-800 hover:bg-white  hover:duration-300 hover:ease-linear focus:bg-white\"\n      onClick={clickHandler}\n    >\n      <p className=\"text-center text-2xl\">{stepName}</p>\n    </div>\n  );\n};\n\nexport default StepButton;\n","import { DraftChart } from \"./DraftChart\";\nimport ChartContainer from \"./ChartContainer\";\nimport Statistics from \"./Statistics\";\nimport StepButton from \"./StepButton\";\nimport { useParams } from \"react-router\";\nimport apiClient from \"../lib/ApiClient\";\nimport { useState, useEffect } from \"react\";\n\nconst formatData = (rawData) => {\n  const data = { ...rawData };\n  // const timeOrigin = new Date(Object.values(Object.values(data)[0])[0][0].time);\n  // const timeOrigin = 0;\n  Object.values(data).forEach((step) => {\n    Object.values(step).forEach((metric) => {\n      metric.forEach((datum) => {\n        // const miliseconds = new Date(datum.time) - timeOrigin;\n        const offset = new Date(datum.time).getTimezoneOffset() * 60 * 1000;\n        datum.time = new Date(datum.time) - offset;\n      });\n    });\n  });\n  return data;\n};\n\nconst TestPage = () => {\n  const tableName = useParams().tableName;\n  // const emptyMetric = [{ time: \"\", metric: \"\", unit: \"\", value: \"\" }];\n\n  const [allSteps, setAllSteps] = useState([]);\n  const [allStats, setAllStats] = useState({});\n  const [allData, setAllData] = useState({});\n  const [currentStep, setCurrentStep] = useState(\"\");\n  const [currentStats, setCurrentStats] = useState({});\n  const [currentData, setCurrentData] = useState({});\n  \n  useEffect(() => {\n    const stepsPromise = apiClient.getListOfSteps(tableName);\n    const statsPromise = apiClient.getTestStats(tableName);\n    const datasetPromise = apiClient.getTestDataset(tableName);\n    Promise.all([stepsPromise, statsPromise, datasetPromise])\n      .then((data) => {\n        setAllSteps(data[0]);\n        setAllStats(data[1]);\n        setAllData(formatData(data[2]));\n        return data;\n      })\n      .then((data) => {\n        const steps = data[0];\n        const step1 = steps[0];\n        setCurrentStep(step1);\n      });\n  }, [setAllSteps, setAllStats, setAllData, setCurrentStep, tableName]);\n\n  useEffect(() => {\n    setCurrentStats(allStats[currentStep] || {});\n    setCurrentData(allData[currentStep] || {});\n  }, [currentStep, allStats, allData, setCurrentStats, setCurrentData]);\n\n  const clickHandler = (e) => {\n    e.preventDefault();\n    setCurrentStep(e.target.textContent);\n  };\n\n  return (\n    <div className=\"w-full bg-white relative flex overflow-hidden\">\n      <div className=\"w-full h-full flex flex-col justify-between\">\n        {/* <!-- Header --> */}\n        <header className=\"h-16 w-full flex items-center relative justify-between px-5 space-x-10 bg-gray-900\">\n          {/* <!-- Profile --> */}\n          {allSteps.map((stepName) => (\n            <StepButton\n              key={stepName}\n              stepName={stepName}\n              clickHandler={clickHandler}\n              data-key={stepName}\n            />\n          ))}\n        </header>\n\n        {/* <!-- Main --> */}\n        <main className=\"max-w-full h-full flex relative overflow-y-hidden\">\n          {/* <!-- Container --> */}\n          <div className=\"h-full w-full rounded-tl grid-flow-col auto-cols-max gap-4 overflow-y-scroll\">\n            {/* <!-- Container --> */}\n            {JSON.stringify(currentStats) !== \"{}\" && (\n              <Statistics {...currentStats} />\n            )}\n            {JSON.stringify(currentData) !== \"{}\" && (\n              <ChartContainer {...currentData} />\n            )}\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n};\n// downpour-test-1637014373298\nexport default TestPage;\n","const Header = () => {\n  return (\n    <div className=\"flex-1 flex flex-col\">\n      <nav className=\"px-4 flex justify-between bg-white h-16 border-b-2 text-4xl\">\n        {/* <!-- top bar left --> */}\n        <ul className=\"flex items-center\">\n          {/* <!-- add button --> */}\n          <li className=\"h-6 w-6\">\n            <img\n              className=\"h-full w-full mx-auto\"\n              src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/Svelte_Logo.svg/512px-Svelte_Logo.svg.png\"\n              alt=\"svelte logo\"\n            />\n          </li>\n        </ul>\n\n        <ul className=\"flex items-center\">\n          {/* <!-- add button --> */}\n          <li>\n            <h1 className=\"pl-8 lg:pl-0 text-gray-700\">\n              Monsoon Weather Channel\n            </h1>\n          </li>\n        </ul>\n\n        {/* <!-- to bar right  --> */}\n        <ul className=\"flex items-center\"></ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default Header;\n","import \"./App.css\";\nimport ListTestTable from \"./components/ListTestTable\";\nimport TestPage from \"./components/TestPage\";\nimport Header from \"./components/Header\";\nimport { Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Routes>\n        <Route path=\"/\">\n          <Route index element={<ListTestTable />} />\n          <Route path=\"tests\">\n            <Route path=\":tableName\" element={<TestPage />} />\n          </Route>\n        </Route>\n      </Routes>\n    </>\n  );\n}\n\n{\n  /* <Route path={`/bins/${binId}`}>\n  <BinPage binId={binId} handleGoToHome={handleGoToHome}/>\n</Route> */\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}